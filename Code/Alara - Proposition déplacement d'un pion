
#include <stdio.h>

#define BOARD_SIZE 7  // Taille du plateau (7x7)

//Fonction d'initialisation du plateau qui crée un plateau rempli de cellules définies uniquement par leur mobilité
void init_plateau(){
    //création d'un plateau aléatoire : 
    int i,j;
    for(i=0;i<7;i++){
        for(j=0;j<7;j++)
        {
            plateau[i][j].x = i; 
            plateau[i][j].y = j;
            plateau[i][j].mobilité = (i%2 == 0 && j%2 == 0) ? false : true; // Si la cellule est sur une ligne ou une colonne paire, elle est inamovible
        }
    }
    //Appel de la fonction de correction du plateau qui va remplir les cellules inamovibles et les cellules amovibles, et créer la dernière cellule excroissante 
    remplissage_plateau();

    //Appel de la fonction de correction des compatibilités qui va remplir les compatibilités des cellules
    maj_compatibilite();
}

// Structure représentant un pion
typedef struct {
  Position;   // Position actuelle du pion sur le plateau
  char color;       // Couleur du pion ('B' ou 'W')
} Pion;

// Fonction de déplacement de pion
void mouvement_pion(Pion *pion) 
{
    init_plateau();
    
    // On vérifie que la nouvelle position est bien sur le plateau
    if (plateau[i][j].x < 0 || plateau[i][j].x >= BOARD_SIZE || plateau[i][j].y < 0 || plateau[i][j].y >= BOARD_SIZE) 
    { 
    printf("Erreur : la position (%d, %d) est en dehors du plateau\n", plateau[i][j].x, plateau[i][j].y);
    return;
    }

  // On met à jour la position du pion
  pion->position.plateau[i][j].x = plateau[i][j].x; 
  pion->position.plateau[i][j].y = plateau[i][j].y;
}

int main(void) 
{
  // On crée un pion blanc en position (0, 0)
  test_pion = {{0, 0}, 'W'};

  // On demande à l'utilisateur de saisir la ligne et la colonne de la nouvelle position
  int plateau[i][j].x, plateau[i][j].y;
  printf("Entrez la ligne de la nouvelle position : ");
  scanf("%d", &plateau[i][j].x);
  printf("Entrez la colonne de la nouvelle position : ");
  scanf("%d", &plateau[i][j].y);

  // On déplace le pion
  mouvement_pion(&test_pion, plateau[i][j].x, plateau[i][j].y);

  return 0;
}
